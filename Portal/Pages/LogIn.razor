@page "/login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager


<h3>LogIn</h3>
@* se afiseaza eroarea de autentificare daca exista *@
@if (showAuthenticationError)
{
    <div class="alert alert-danger" role="alert">
        <p>@authenticationErrorText</p>
    </div>
}

@* formular de autentificare *@

<EditForm Model="model" OnValidSubmit="ExecuteLogin" class="card card-body bg-light mt-5" >
<DataAnnotationsValidator />
<ValidationSummary />
    <div class="form-group row">
        <label for="email" class="col-md-2 col-form-label">Email</label>
        <div class="col-md-10">
            <InputText id="email" class="form-control" @bind-Value="model.Email" />
            <ValidationMessage For="@(() => model.Email)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="password" class="col-md-2 form-label">Password</label>
        <div class="col-md-10">
            <InputText id="password" class="form-control" @bind-Value="model.Password" />
            <ValidationMessage For="@(() => model.Password)" />
        </div>
    </div>

    <div class="row">
        <div class=" col-md-12 text-right">
            <button type="submit" class="btn btn-success">Log In</button>
        </div>
    </div>
</EditForm>





@code {
    private AuthenticationUserModel model = new();

    private bool showAuthenticationError = false;
    private string authenticationErrorText = string.Empty;

    private async Task ExecuteLogin()
    {
        showAuthenticationError = false;

        try
        {
            // var result = await AuthService.Login(model);
            AuthenticatedUserModel result = await AuthService.Login(model);

            if (result is not null)
            {
                NavManager.NavigateTo("/");
            }
            else
            {
                authenticationErrorText = "There was an error when trying to lo in.";
                showAuthenticationError = true;
            }
        }
        catch (Exception ex)
        {
            authenticationErrorText = $"An error occurred: {ex.Message}";
            showAuthenticationError = true;
        }
    }
}
